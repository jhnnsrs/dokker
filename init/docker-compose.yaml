version: '3.7'

services:
  db:
    environment:
      POSTGRES_MULTIPLE_DATABASES: shaggy_carmine_chameleon_db, beady_cyan_sparrow_db, woolly_charcoal_cuscus_db, gamy_indigo_meerkat_db, pokey_wisteria_barnacle_db, woozy_chocolate_crocodile_db, bluesy_cobalt_mole_db, wiggy_cerulean_butterfly_db, nippy_khaki_uakari_db
      POSTGRES_PASSWORD: ba17b7cf3fb13a92289705e47bd1f2a1
      POSTGRES_USER: snoopybluerhinoceros
    image: jhnnsrs/daten:next
    labels:
      - "arkitekt.default.service=db"
  rabbitmq:
    command: rabbitmq-server
    image: jhnnsrs/mister:fancy
    labels:
      - "arkitekt.default.service=rabbitmq"
      - "arkitekt.service=rabbitmq"
      - "arkitekt.deployment=default"
      - "arkitekt.description=The backbone for task assignment"
  redis:
    image: redis:latest
    labels:
      - "arkitekt.default.service=redis"
      - "arkitekt.service=redis"
      - "arkitekt.deployment=default"
      - "arkitekt.description=A real-time communication layer between the services"
  initc:
    depends_on:
      minio:
        condition: service_started
    environment:
      MINIO_HOST: http://minio:9000
      MINIO_ROOT_PASSWORD: 4926d85a3bd33ea90869011c1bad028b
      MINIO_ROOT_USER: sloppyfirebrickdolphin
    image: jhnnsrs/init:paper
    volumes:
    - ./configs/minio.yaml:/workspace/config.yaml
  minio:
    command: server /data  --console-address ":9001"
    environment:
      MINIO_ROOT_PASSWORD: 4926d85a3bd33ea90869011c1bad028b
      MINIO_ROOT_USER: sloppyfirebrickdolphin
    image: minio/minio:RELEASE.2023-02-10T18-48-39Z
    ports:
    - 8050:9000
    - 8051:9001
    labels:
      - "arkitekt.default.service=s3"
      - "arkitekt.service=s3"
      - "arkitekt.deployment=default"
      - "arkitekt.description=The binary storage for all your data"
      - "arkitekt.link=http://localhost:8051"    
  orkestrator:
    image: jhnnsrs/orkestrator:paper
    ports:
      - 8010:80
    labels:
      - "arkitekt.default.service=orkestrator"
      - "arkitekt.service=orkestrator"
      - "arkitekt.deployment=default"
      - "arkitekt.description=The interaction layer between the user and the system."
      - "arkitekt.link=http://localhost:8010"
  port:
    depends_on:
    - lok
    - db
    - redis
    image: jhnnsrs/port:paper
    command: bash run.sh
    ports:
    - 8070:80
    volumes:
      - ./configs/port.yaml:/workspace/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "arkitekt.default.service=port"
      - "arkitekt.service=port"
      - "arkitekt.deployment=default"
      - "arkitekt.description=Managing docker containers and their configuration"
      - "arkitekt.link=http://localhost:8070"
      - "arkitekt.healthz=http://localhost:8070/ht"
  portbridge:
    depends_on:
    - lok
    - db
    - redis
    image: jhnnsrs/port:paper
    command: bash run-worker.sh
    volumes:
      - ./configs/port.yaml:/workspace/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "arkitekt.default.service=portbridge"
      - "arkitekt.description=A asynchronous worker for port"
  rekuest:
    depends_on:
    - redis
    - db
    - rabbitmq
    image: jhnnsrs/rekuest:paper
    ports:
    - 8020:80
    volumes:
    - ./configs/rekuest.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.default.service=rekuest"
      - "arkitekt.service=rekuest"
      - "arkitekt.deployment=default"
      - "arkitekt.description=The repository for all of the functionality in your lab"
      - "arkitekt.link=http://localhost:8020"
      - "arkitekt.healthz=http://localhost:8020/ht"
  omero_ark:
    depends_on:
    - redis
    - db
    - minio
    image: jhnnsrs/omero-ark:paper
    command: bash run-debug.sh
    ports:
    - 8100:80
    volumes:
    - ./configs/omero_ark.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.default.service=omero-ark"
      - "arkitekt.service=omero_ark"
      - "arkitekt.deployment=default"
      - "arkitekt.description=Hosting your microscopy data and metadata"
      - "arkitekt.link=http://localhost:8100"
      - "arkitekt.healthz=http://localhost:8100/ht"
  kluster:
    depends_on:
    - redis
    - db
    - minio
    image: jhnnsrs/kluster:paper
    command: bash run-debug.sh
    ports:
    - 8080:80
    volumes:
    - ./configs/kluster.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.default.service=kluster"
      - "arkitekt.service=kluster"
      - "arkitekt.deployment=default"
      - "arkitekt.description=Lets you spin up clusters"
      - "arkitekt.link=http://localhost:8080"
      - "arkitekt.healthz=http://localhost:8080/ht"
  omero_database:
    image: "postgres:11"
    environment:
      POSTGRES_USER: slaphappybluezonkey
      POSTGRES_DB:  stealthy_sangria_uakari_db
      POSTGRES_PASSWORD:  5c06d3f31e4d0896cdc4fd48495f6d66
  omeroserver:
    image: "openmicroscopy/omero-server:5"
    environment:
      CONFIG_omero_db_host: omero_database
      CONFIG_omero_db_user: slaphappybluezonkey
      CONFIG_omero_db_pass: 5c06d3f31e4d0896cdc4fd48495f6d66
      CONFIG_omero_db_name: stealthy_sangria_uakari_db
      ROOTPASS: omero
    ports:
      - "8110:4063"
      - "8120:4064"
    labels:
      - "arkitekt.default.service=omero_server"
      - "arkitekt.service=omero_server"
      - "arkitekt.deployment=default"
      - "arkitekt.description=Lets you spin up clusters"
      - "arkitekt.link=http://localhost:"
      - "arkitekt.healthz=http://localhost:/ht"
  omeroweb:
    image: "openmicroscopy/omero-web-standalone:5"
    environment:
      OMEROHOST: omeroserver
    ports:
      - "8130:4080"
    labels:
      - "arkitekt.default.service=omero_web"
      - "arkitekt.service=omero_web"
      - "arkitekt.deployment=default"
      - "arkitekt.description=Lets you spin up clusters"
      - "arkitekt.link=http://localhost:8130"
      - "arkitekt.healthz=http://localhost:8130/ht"
  kluster_gateway:
    image: jhnnsrs/kluster-gateway:paper
    ports:
    - 8090:8000
    volumes:
    - ./configs/gateway.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.default.service=kluster-gateway"
      - "arkitekt.service=kluster-gateway"
      - "arkitekt.deployment=default"
      - "arkitekt.description=Interact with your dask-cluster"
      - "arkitekt.link=http://localhost:8090"
      - "arkitekt.healthz=http://localhost:8090/ht"
  
    